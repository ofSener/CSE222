{"ast":null,"code":"var _jsxFileName = \"/home/vscode/data/lmt-solver/ui/src/StepsViewer.js\";\nimport React from \"react\";\nimport { MathJax, MathJaxContext } from \"better-react-mathjax\";\n\n/*\n  Example step structure:\n  {\n    step_number: 1,\n    rule: \"L'Hopital\",\n    old_expression: \"(x^2 - 1)/(x - 1)\",\n    new_expression: \"(2*x)/1\",\n    old_expression_latex: \"\\\\frac{x^2 - 1}{x - 1}\",\n    new_expression_latex: \"2x\",\n    explanation: \"0/0 belirsizliği, L'Hopital uygulandı.\"\n  }\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StepsViewer({\n  steps\n}) {\n  if (!steps || steps.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No steps to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // MathJax configuration (optional)\n  const config = {\n    loader: {\n      load: [\"[tex]/ams\"]\n    },\n    tex: {\n      inlineMath: [[\"\\\\(\", \"\\\\)\"]],\n      displayMath: [[\"\\\\[\", \"\\\\]\"]]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MathJaxContext, {\n    config: config,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Step-by-Step Explanation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), steps.map(st => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 10,\n        marginBottom: 10,\n        borderRadius: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Step \", st.step_number, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), \" \", st.rule || \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Old:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(MathJax, {\n          inline: true,\n          children: \"\\\\(\" + (st.old_expression_latex || \"\") + \"\\\\)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"New:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(MathJax, {\n          inline: true,\n          children: \"\\\\(\" + (st.new_expression_latex || \"\") + \"\\\\)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Explanation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), \" \", st.explanation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, st.step_number, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = StepsViewer;\nexport default StepsViewer;\nvar _c;\n$RefreshReg$(_c, \"StepsViewer\");","map":{"version":3,"names":["React","MathJax","MathJaxContext","jsxDEV","_jsxDEV","StepsViewer","steps","length","children","fileName","_jsxFileName","lineNumber","columnNumber","config","loader","load","tex","inlineMath","displayMath","map","st","style","border","padding","marginBottom","borderRadius","step_number","rule","inline","old_expression_latex","new_expression_latex","explanation","_c","$RefreshReg$"],"sources":["/home/vscode/data/lmt-solver/ui/src/StepsViewer.js"],"sourcesContent":["import React from \"react\";\nimport { MathJax, MathJaxContext } from \"better-react-mathjax\";\n\n/*\n  Example step structure:\n  {\n    step_number: 1,\n    rule: \"L'Hopital\",\n    old_expression: \"(x^2 - 1)/(x - 1)\",\n    new_expression: \"(2*x)/1\",\n    old_expression_latex: \"\\\\frac{x^2 - 1}{x - 1}\",\n    new_expression_latex: \"2x\",\n    explanation: \"0/0 belirsizliği, L'Hopital uygulandı.\"\n  }\n*/\n\nfunction StepsViewer({ steps }) {\n  if (!steps || steps.length === 0) {\n    return <div>No steps to display.</div>;\n  }\n\n  // MathJax configuration (optional)\n  const config = {\n    loader: { load: [\"[tex]/ams\"] },\n    tex: {\n      inlineMath: [[\"\\\\(\", \"\\\\)\"]],\n      displayMath: [[\"\\\\[\", \"\\\\]\"]]\n    }\n  };\n\n  return (\n    <MathJaxContext config={config}>\n      <h3>Step-by-Step Explanation</h3>\n      {steps.map((st) => (\n        <div\n          key={st.step_number}\n          style={{\n            border: \"1px solid #ccc\",\n            padding: 10,\n            marginBottom: 10,\n            borderRadius: 5\n          }}\n        >\n          <p>\n            <strong>Step {st.step_number}:</strong> {st.rule || \"\"}\n          </p>\n\n          {/* Old Expression (LaTeX) */}\n          <p>\n            <strong>Old:</strong>{\" \"}\n            <MathJax inline>{\"\\\\(\" + (st.old_expression_latex || \"\") + \"\\\\)\"}</MathJax>\n          </p>\n\n          {/* New Expression (LaTeX) */}\n          <p>\n            <strong>New:</strong>{\" \"}\n            <MathJax inline>{\"\\\\(\" + (st.new_expression_latex || \"\") + \"\\\\)\"}</MathJax>\n          </p>\n\n          <p>\n            <strong>Explanation:</strong> {st.explanation}\n          </p>\n        </div>\n      ))}\n    </MathJaxContext>\n  );\n}\n\nexport default StepsViewer;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,cAAc,QAAQ,sBAAsB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,SAAAC,MAAA,IAAAC,OAAA;AAaA,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAC9B,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAChC,oBAAOH,OAAA;MAAAI,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxC;;EAEA;EACA,MAAMC,MAAM,GAAG;IACbC,MAAM,EAAE;MAAEC,IAAI,EAAE,CAAC,WAAW;IAAE,CAAC;IAC/BC,GAAG,EAAE;MACHC,UAAU,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;MAC5BC,WAAW,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC;IAC9B;EACF,CAAC;EAED,oBACEd,OAAA,CAACF,cAAc;IAACW,MAAM,EAAEA,MAAO;IAAAL,QAAA,gBAC7BJ,OAAA;MAAAI,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChCN,KAAK,CAACa,GAAG,CAAEC,EAAE,iBACZhB,OAAA;MAEEiB,KAAK,EAAE;QACLC,MAAM,EAAE,gBAAgB;QACxBC,OAAO,EAAE,EAAE;QACXC,YAAY,EAAE,EAAE;QAChBC,YAAY,EAAE;MAChB,CAAE;MAAAjB,QAAA,gBAEFJ,OAAA;QAAAI,QAAA,gBACEJ,OAAA;UAAAI,QAAA,GAAQ,OAAK,EAACY,EAAE,CAACM,WAAW,EAAC,GAAC;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACQ,EAAE,CAACO,IAAI,IAAI,EAAE;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eAGJR,OAAA;QAAAI,QAAA,gBACEJ,OAAA;UAAAI,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAAC,GAAG,eACzBR,OAAA,CAACH,OAAO;UAAC2B,MAAM;UAAApB,QAAA,EAAE,KAAK,IAAIY,EAAE,CAACS,oBAAoB,IAAI,EAAE,CAAC,GAAG;QAAK;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,eAGJR,OAAA;QAAAI,QAAA,gBACEJ,OAAA;UAAAI,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAAC,GAAG,eACzBR,OAAA,CAACH,OAAO;UAAC2B,MAAM;UAAApB,QAAA,EAAE,KAAK,IAAIY,EAAE,CAACU,oBAAoB,IAAI,EAAE,CAAC,GAAG;QAAK;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,eAEJR,OAAA;QAAAI,QAAA,gBACEJ,OAAA;UAAAI,QAAA,EAAQ;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACQ,EAAE,CAACW,WAAW;MAAA;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA,GA1BCQ,EAAE,CAACM,WAAW;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA2BhB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB;AAACoB,EAAA,GAlDQ3B,WAAW;AAoDpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}